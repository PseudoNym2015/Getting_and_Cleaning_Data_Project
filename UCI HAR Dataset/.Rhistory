md
install.packages("swirl")
library("swirl")
swirl()
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1, 9, 3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
getwd()
ls()
x<-9
ls()
list.files()
?list.files
args(list.files)
old.dir<-getwd()
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
file.path('folder1','folder2')
?dir.create
dir.create(file.path('testdir2','testdir3'))
dir.create(file.path('testdir2','testdir3',recursive=TRUE))
dir.create(file.path('testdir2', 'testdir3'),recursive = TRUE)
unlink('testdir2',recursive=TRUE)
setwd('old.dir')
setwd(old.dir)
unlink(tesdtdir,recursive=TRUE)
unlink('testdir',recursive=TRUE)
x<-4
class(x)
x<-c(4,TRUE)
class(x)
x
x<-c(1,3,5)
y<-c(3,2,10)
cbind(x,y)
class(cbind(x,y))
x<-list(2,"a","b",TRUE)
y<-x[[1]]
y
class(y)
x<-1:4
y<-2:3
x+y
class(x+y)
x<-c(17,14,4,5,13,12,10)
x[x==4]>10
x[x>=11]<-4
x
swirl()
library(swirl)
swirl()
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10, by=.5)
my_seq<-seq(5,10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
?ls
isdebugged(ls)
ls
a<-4
b<-3
ls
ls(globalenv)
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list<-lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect<-sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors<-flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes<-flags[,19:23]
lapply(flag_shapes,range)
shape_mat<-sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals<-lapply(flags,unique)
unique_vals
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals,function(elem)elem[2])
library(swirl)
swiro()
swirl()
sapply(flags,unique)
vapply(flags,unique,numeric(1))
ok()
sapply(flags,class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population,flags$red,summary)
tapply(flags$population,flags$landmass,summary)
ls()
class(plants)
dim(plants)
nrow(plants)
nocl(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6,4,replace=TRUE)
sample(1:6,4,replace=TRUE)
sample(1:20,10)
letters
LETTERS
sample(LETTERS)
flips<-sample(c(0,1),100,replacement=true,prob=c(.3,.7))
flips<-sample(c(0,1),100,replace=true,prob=c(.3,.7))
flips<-sample(c(0,1),100,replace=TRUE,prob=c(.3,.7))
flips
sum(flips)
?rbinom
rbinom(1,size=100,prob=.7)
flips2<-rbinom(100,1,.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10,100,25)
rpois(5,10)
my_pois<-replicate(100,rpois(5,10))
my_pois
cm<-colMeans(my_pois)
hist(cm)
library(swirl)
swirl()
d1<-Sys.Date()
class(d1)
unclass(d1)
d1
d2<-as.Date("1969-01-01")
unclass(d2)
t1<-Sys.time()
ti
t1
class(t1)
unclass(t1)
t2<-as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3<-"October 17, 1986 08:24"
?strptime
strpime(t3,"%B %d,%Y%H:%M")
strptime(t3,"%B %d,%Y%H:%M")
strptime(t3,"%B %d,%Y %H:%M")
strptime(t3,"%B %d, %Y %H:%M")
strptime(t3, "%B %d, %Y %H:%M")
t<-strptime(t3, "%B %d, %Y %H:%M")
t4<-strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time()>t1
Sys.time()-t1
difftime(Systime(),t1,units='days')
difftime(Sys.time(),t1,units='days')
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x=cars$speed,y=cars$dist)
plot(x=cars$dist,y=cars$speed)
plot(x=cars$speed,y=cars$dist)
plot(x=Speed,y=cars$dist)
plot(x=cars$speed,y=cars$dist,xlab="Speed")
plot(x=cars$speed,y=cars$dist,xlab="Speed",ylab="Stopping Distance")
plot(x=cars$speed,y=cars$dist,ylab="Stopping Distance")
plot(x=cars$speed,y=cars$dist,ylab="Stopping Distance",xlab = "Speed")
plot(cars,main="My Plot")
plot(cars,sub="My Plot Subtitle")
plot(cars,col=2)
?par
plot(cars,xlim=c(10,15))
?points
plot(cars,pch=2)
data(mtcars)
play()
head(mtcars)
dim(mtcars)
summary(mtcars)
nxt()
?boxplot
boxplot(data=mtcars,formula=mpg~cyl)
boxplot(data='mtcars',formula=mpg~cyl)
boxplot(mtcars,formula=mpg~cyl)
boxplot(formula=mpg~cyl,data=mtcars)
hist(mtcars$mpg)
library(swirl)
swirl()
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf<-read.csv(path2csv,stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion((dplyr))
packageVersion("dplyr")
cran<-tbl_df(mydf)
rm("mydf")
cran
?select
select(cran,ip_id,package,country)
5:20
select(cran,r_arch:country)
select(cran,country:r_arch)
cran
select(cran,-time)
-5:20
-(5:20)
select(cran-(x:size))
select(cran,-(x:size))
select(cran,-("x":"size"))
select(cran,-(X:size))
filter(cran,package=="swirl")
filter(cran,r_version=="3.1.1",country=="US")
?Comparison
filter(cran,r_version<="3.1.1",country=="IN")
filter(cran,r_version<="3.0.2",country=="IN")
filter(cran,country=="US"|country=="IN")
filter(cran,size>100500,r_os=="linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran,!is.na(r_version))
cran2<-select(cran,size:ip_id)
arrange(cran2,ip_id)
arrange(cran,desc(ip_id))
arrange(cran2,desc(ip_id))
arrange(cran2,package,ip_id)
arange(cran2,country,desc(r_version),ip_id)
arrange(cran2,country,desc(r_version),ip_id)
cran3<-select(cran,ip_id,package,size)
cran3
mutate(cran3, size_mb=size/2^20)
mutate(cran3, size_mb=size/2^20,size_gb=size_mb/2^10)
mutate(cran3,correct_size=size+1000)
summarize(cran,avg_bytes=mean(size))
library(dplyr)
cran<-tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package<-group_by(cran,package)
by_package
summarize(by_package,mean(size))
?n
?n_distinct
submin()
submit()
pack_sum
quantile(pack_sum$count,probs = 0.99)
top_counts<-filter(pack_sum,count>679)
top_counts
View(top_counts)
top_counts_sorted<-arrange(top_counts,dexc(count))
top_counts_sorted<-arrange(top_counts,desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique,probs=0.99)
top_unique<-filter(pack_sum,unique>465)
View(top_unique)
top_unique_sorted<-arrange(top_unique,desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
?select
submit()
reset()
submit()
select(cran,ip_id,country,package,size)
submit
submit
submit
submit()
source()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
selct(cran,ip_id,country,package,size)
select(cran,ip_id,country,package,size)
submit()
submit()
submit()
submit()
setwd("E:/Coursera/Getting and Cleaning Data/Quizzes")
source('E:/Coursera/Getting and Cleaning Data/Quizzes/Qz3q3.R')
source('E:/Coursera/Getting and Cleaning Data/Quizzes/Qz3q3.R')
source('E:/Coursera/Getting and Cleaning Data/Quizzes/Qz3q3.R')
source('E:/Coursera/Getting and Cleaning Data/Quizzes/Qz3q3.R')
source('E:/Coursera/Getting and Cleaning Data/Quizzes/Qz3q3.R')
head(GDP2,6)
tail(GDP2,6)
source('E:/Coursera/Getting and Cleaning Data/Quizzes/Qz3q3.R')
tail(GDP3,6)
source('E:/Coursera/Getting and Cleaning Data/Quizzes/Qz3q3.R')
tail(GDP3,6)
head(GDP3,6)
source('E:/Coursera/Getting and Cleaning Data/Quizzes/Qz3q3.R')
head(Eddata,6)
class(Eddata$CountryCode)
?match
GDP3$ShortCode %in% Eddata$CountryCode
sum(GDP3$ShortCode %in% Eddata$CountryCode)
?sort
?arrange
GDP4<-arrange(GDP3,desc(Ranking))
GDP4[13,]
?merge
Combined<-merge(GDP3,Eddata)
head(Combined,6)
source('E:/Coursera/Getting and Cleaning Data/Quizzes/Qz3q3.R')
Combined<-merge(GDP3,Eddata)
head(Combined,6)
??average
?mean
first<-Combined[which(Combined$Income.Group=="High income: OECD")]
unique(Combined$Income.Group)
first<-Combined[which(Combined$Income.Group="High income: OECD")]
first<-Combined[which(Combined$Income.Group=="High income: OECD")]
Combined[which(Combined$Income.Group=="High income: OECD")]
?which
first<-Combined[which(Combined$Income.Group=="High income: OECD"),]
mean(first$Ranking)
second<-Combined[which(Combined$Income.Group=="High income: nonOECD"),]
mean(second$Ranking)
?quantile
?cut
GDP3$quantileGroups=cut(GDP3$Ranking,breaks=5)
table(GDP3$quantileGroups)
Combined$quantileGroups=cut(Combined$Ranking,breaks=5)
table(Combined$quantileGroups,Combined$Income.Group)
setwd("E:/Coursera/Getting and Cleaning Data/getdata-projectfiles-UCI HAR Dataset/UCI HAR Dataset")
read.table("test/subject_test.txt")
st<-read.table("test/subject_test.txt")
head(st,6)
unique(st[,1])
X_test<-read.table("test/X_test.txt")
dim(X_test)
y_test<-read.table("test/y_test.txt")
dim(y_test)
subject_test<-read.table("test/subject_test.txt")
dim(subject_test)
head(subject_test,6)
names(X_test)
test<-cbind(y_test,X_test)
dim(test)
head(test[1:6,1:10])
activity_labels<-read.table("activity_labels.txt")
dim(activity_labels)
features<-read.table("fatures.txt")
features<-read.table("features.txt")
dim(features)
head(features)
?read.table
column_names<-features[,2]
dim(column_names)
dim(features)
features<-read.table("features.txt",colClasses = "character")
head(features[,2])
source('~/.active-rstudio-document')
head(y_test,5)
